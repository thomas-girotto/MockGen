<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System;
using MockGen.Specs.Generated.Helpers.Matchers;

namespace MockGen.Specs.Generated.Helpers
{
    internal class ActionSpecification<#=Descriptor.GenericTypes#>
    {
        internal static ActionSpecification<#=Descriptor.GenericTypes#> Default = new ActionSpecification<#=Descriptor.GenericTypes#>(<#=Descriptor.ConcatNewClassByParameterType("AnyArgMatcher")#>, <#=Descriptor.DiscardParameters#> => { });

<# foreach (var n in Descriptor.EnumerateNumbers) { #>
        private readonly ArgMatcher<TParam<#=n#>> matcher<#=n#>;
<# } #>

        internal ActionSpecification(<#=Descriptor.ConcatClassParameterByParameterType("ArgMatcher", "matcher")#>, Action<#=Descriptor.GenericTypes#> action)
        {
<# foreach (var n in Descriptor.EnumerateNumbers) { #>
            this.matcher<#=n#> = matcher<#=n#>;
<# } #>
            Action = action;
        }

        internal bool Match(<#=Descriptor.ParametersTypesWithName("param")#>)
        {
            return <#=Descriptor.ConcatMatcherCalls("matcher", "param")#>
        }

        internal Action<#=Descriptor.GenericTypes#> Action { get; private set; }
    }
}