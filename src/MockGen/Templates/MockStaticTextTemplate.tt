<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# foreach (var ns in Namespaces) { #> 
using <#=ns#>;
<# } #>

namespace MockGen
{
    internal class Mock
    {
<# foreach(var mock in Mocks) { #>
<# if (mock.Mock.IsInterface) { #>
        internal static <#=mock.Mock.TypeToMock.Name#>MockBuilder <#=mock.Mock.TypeToMock.Name#>()
        {
            return new <#=mock.Mock.TypeToMock.Name#>MockBuilder();
        }

<# } else { #>
<# foreach(var ctorParameters in mock.CtorsParameters) { #>
        internal static <#=mock.Mock.TypeToMock.Name#>MockBuilder <#=mock.Mock.TypeToMock.Name#>(<#=ctorParameters.TypesAndNames#>)
        {
            return new <#=mock.Mock.TypeToMock.Name#>MockBuilder(<#=ctorParameters.Names#>);
        }

<# } #>
<# } #>
<# } #>
    }
}