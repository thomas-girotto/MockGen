<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System;

namespace MockGen.Setup
{
    internal class ActionConfigurationWithReturn<#=Descriptor.GenericTypesWithTReturn#>
    {
        private ActionConfiguration<#=Descriptor.GenericTypes#> baseConfiguration;

        internal ActionConfigurationWithReturn(ActionConfiguration<#=Descriptor.GenericTypes#> baseConfiguration)
        {
            this.baseConfiguration = baseConfiguration;
        }

        internal Func<TReturn> ReturnAction { private get; set; } = () => default(TReturn);

<# if (Descriptor.NumberOfTypes > 0) { #>
        internal bool Match(<#=Descriptor.ParametersTypesWithName#>) => baseConfiguration.Match(<#=Descriptor.ConcatParameters("param")#>);
<# } #>

        internal TReturn RunActions(<#=Descriptor.ParametersTypesWithName#>)
        {
            baseConfiguration.RunActions(<#=Descriptor.ConcatParameters("param")#>);
            return ReturnAction();
        }
    }
}
